openapi: 3.0.3
info:
  title: Start Auth API
  description: |
    **Description:**
    This document specifies the API endpoints for managing users, collectors, businesses, vehicles, drivers, and service categories in the Start Auth application.

    **Note:**
    - Admins can manage users, vehicles, and service categories.
    - Collectors can manage their profiles, vehicles, drivers, and offered service categories.
    - Businesses can request pickups and view their status.

  version: 1.0.0

servers:
  - url: "http://localhost:8080"

tags:
  - name: Admin
    description: Endpoints for admin operations.
  - name: Collector
    description: Endpoints for collector operations.
  - name: Business
    description: Endpoints for business operations.

paths:
  /admin/verify/{id}:
    put:
      summary: Verify a user
      tags:
        - Admin
      description: Sets the user's `is_verified` status to true.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to verify.
      responses:
        "200":
          description: User verified successfully
        "500":
          description: Internal server error

  /admin/unverify/{id}:
    put:
      summary: Unverify a user
      tags:
        - Admin
      description: Sets the user's `is_verified` status to false.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to unverify.
      responses:
        "200":
          description: User unverified successfully
        "500":
          description: Internal server error

  /admin/flag/{id}:
    put:
      summary: Flag a user
      tags:
        - Admin
      description: Flags a user by setting `is_flagged` to true and `is_active` to false.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to flag.
      responses:
        "200":
          description: User flagged successfully
        "500":
          description: Internal server error

  /admin/unflag/{id}:
    put:
      summary: Unflag a user
      tags:
        - Admin
      description: Unflags a user by setting `is_flagged` to false and `is_active` to true.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to unflag.
      responses:
        "200":
          description: User unflagged successfully
        "500":
          description: Internal server error

  /admin/add/service-category:
    post:
      summary: Add a service category
      tags:
        - Admin
      description: Adds a new waste service category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCategory"
      responses:
        "200":
          description: Service category added successfully
        "500":
          description: Internal server error

  /admin/add/vehicle:
    post:
      summary: Add a vehicle
      tags:
        - Admin
      description: Adds a new vehicle.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        "200":
          description: Vehicle added successfully
        "500":
          description: Internal server error

  /collector/profile/{id}:
    patch:
      summary: Update collector profile
      tags:
        - Collector
      description: Updates the profile of a collector.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the collector to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorUpdate"
      responses:
        "200":
          description: Collector profile updated successfully
        "500":
          description: Internal server error

  /collector/service-categories:
    post:
      summary: Offer a service category
      tags:
        - Collector
      description: Allows a collector to offer a new service category.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorServiceCategory"
      responses:
        "200":
          description: Service category offered successfully
        "500":
          description: Internal server error

    patch:
      summary: Update offered service category
      tags:
        - Collector
      description: Updates an existing service category offered by a collector.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorServiceCategory"
      responses:
        "200":
          description: Service category updated successfully
        "500":
          description: Internal server error

    delete:
      summary: Delete offered service category
      tags:
        - Collector
      description: Deletes a service category offered by a collector.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ID of the service category to delete.
      responses:
        "200":
          description: Service category deleted successfully
        "500":
          description: Internal server error

  /collector/vehicles:
    post:
      summary: Add a vehicle
      tags:
        - Collector
      description: Allows a collector to add a new vehicle.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorVehicle"
      responses:
        "200":
          description: Vehicle added successfully
        "500":
          description: Internal server error

  /collector/vehicles/{id}:
    patch:
      summary: Update a vehicle
      tags:
        - Collector
      description: Updates an existing vehicle for a collector.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the vehicle to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorVehicle"
      responses:
        "200":
          description: Vehicle updated successfully
        "500":
          description: Internal server error

    put:
      summary: Activate or deactivate a vehicle
      tags:
        - Collector
      description: Activates or deactivates a vehicle for a collector.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the vehicle to activate or deactivate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_active:
                  type: boolean
                  description: Whether to activate or deactivate the vehicle.
      responses:
        "200":
          description: Vehicle status updated successfully
        "500":
          description: Internal server error

  /collector/drivers:
    post:
      summary: Register a driver
      tags:
        - Collector
      description: Registers a new driver for a collector.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorDriver"
      responses:
        "200":
          description: Driver registered successfully
        "500":
          description: Internal server error

  /collector/drivers/{id}:
    patch:
      summary: Update a driver
      tags:
        - Collector
      description: Updates an existing driver for a collector.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the driver to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorDriver"
      responses:
        "200":
          description: Driver updated successfully
        "500":
          description: Internal server error

    put:
      summary: Assign a vehicle to a driver
      tags:
        - Collector
      description: Assigns a vehicle to a driver.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the driver to assign a vehicle to.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicle_id:
                  type: integer
                  description: ID of the vehicle to assign.
      responses:
        "200":
          description: Vehicle assigned to driver successfully
        "500":
          description: Internal server error

components:
  schemas:
    ServiceCategory:
      type: object
      properties:
        category_id:
          type: integer
        waste_type:
          type: string

    Vehicle:
      type: object
      properties:
        vehicle_id:
          type: integer
        vehicle_type:
          type: string
        capacity:
          type: number

    CollectorUpdate:
      type: object
      properties:
        user_id:
          type: integer
        email:
          type: string
        full_name:
          type: string
        phone_number:
          type: string
        address:
          type: string
        is_active:
          type: boolean

    CollectorServiceCategory:
      type: object
      properties:
        category_id:
          type: integer
        price_per_kg:
          type: number
        maximum_capacity:
          type: number
        handling_requirements:
          type: string

    CollectorVehicle:
      type: object
      properties:
        vehicle_id:
          type: integer
        vehicle_number:
          type: string
        is_active:
          type: boolean

    CollectorDriver:
      type: object
      properties:
        driver_id:
          type: integer
        license_number:
          type: string
        license_expiry:
          type: string
          format: date
        is_employed:
          type: boolean
        is_active:
          type: boolean
        rating:
          type: number
        joining_date:
          type: string
          format: date
